apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-03-19T08:20:28Z"
    generation: 1
    labels:
      app: dep
    name: dep
    namespace: default
    resourceVersion: "21321"
    uid: 20bf768a-3f0f-474e-9b13-9af20c342652
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: dep
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: dep
      spec:
        containers:
        - image: nginx
          imagePullPolicy: Always
          name: nginx
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-03-19T08:20:28Z"
      lastUpdateTime: "2024-03-19T08:20:31Z"
      message: ReplicaSet "dep-6fb8b974f4" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2024-03-21T06:02:23Z"
      lastUpdateTime: "2024-03-21T06:02:23Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-03-20T14:23:18Z"
    generation: 1
    labels:
      app: newserver
    name: newserver
    namespace: default
    resourceVersion: "21329"
    uid: 4d270418-ec19-4470-ac17-31bb24c0443a
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: newserver
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: newserver
      spec:
        containers:
        - image: httpd
          imagePullPolicy: Always
          name: httpd
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-03-20T14:23:18Z"
      lastUpdateTime: "2024-03-20T14:23:53Z"
      message: ReplicaSet "newserver-749b45f754" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2024-03-21T06:02:23Z"
      lastUpdateTime: "2024-03-21T06:02:23Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kompose.cmd: kompose convert -f docker-compose.yaml -o localregistry.yaml
      kompose.version: 1.1.0 (36652f6)
    creationTimestamp: "2024-03-19T10:22:03Z"
    generation: 1
    labels:
      io.kompose.service: registry
    name: registry
    namespace: default
    resourceVersion: "21339"
    uid: 4d75d1ce-2096-4323-8195-b2865eee8f71
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        io.kompose.service: registry
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: registry
      spec:
        containers:
        - env:
          - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
            value: /data
          image: registry:2
          imagePullPolicy: IfNotPresent
          name: registry
          ports:
          - containerPort: 5000
            hostIP: 127.0.0.1
            hostPort: 8000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: registry-claim0
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: registry-claim0
          persistentVolumeClaim:
            claimName: registry-claim0
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-03-19T10:22:03Z"
      lastUpdateTime: "2024-03-19T10:22:28Z"
      message: ReplicaSet "registry-5cf984c847" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2024-03-21T06:02:23Z"
      lastUpdateTime: "2024-03-21T06:02:23Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2024-03-19T12:31:10Z"
    generation: 1
    labels:
      app: try1
    name: try1
    namespace: default
    resourceVersion: "21341"
    uid: 55a55160-9292-47c6-b03f-78b026acc4be
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: try1
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: try1
      spec:
        containers:
        - image: bashlogs/simpleapp:v1
          imagePullPolicy: IfNotPresent
          name: simpleapp
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-03-19T12:43:33Z"
      lastUpdateTime: "2024-03-19T12:43:33Z"
      message: ReplicaSet "try1-9dff94978" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2024-03-21T06:02:23Z"
      lastUpdateTime: "2024-03-21T06:02:23Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kompose.cmd: kompose convert -f docker-compose.yaml -o localregistry.yaml
      kompose.version: 1.1.0 (36652f6)
    creationTimestamp: "2024-03-19T10:22:03Z"
    generation: 1
    labels:
      io.kompose.service: nginx
    name: nginx
    namespace: default
    resourceVersion: "21346"
    uid: 1d15ffc1-b665-4826-9b07-b9aafa0eb3ae
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        io.kompose.service: nginx
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: nginx
      spec:
        containers:
        - image: nginx:1.12
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
          - containerPort: 443
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/nginx/conf.d
            name: nginx-claim0
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: nginx-claim0
          persistentVolumeClaim:
            claimName: nginx-claim0
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-03-19T10:22:03Z"
      lastUpdateTime: "2024-03-19T10:23:03Z"
      message: ReplicaSet "nginx-6b47bcc6c6" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2024-03-21T06:02:23Z"
      lastUpdateTime: "2024-03-21T06:02:23Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
kind: List
metadata:
  resourceVersion: ""
